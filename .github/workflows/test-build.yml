name: Test, Lint, Build and Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r api/requirements.txt
          pip install -r app/requirements.txt
          pip install pytest flake8

      - name: Run linting
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run tests
        run: pytest -v

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set Docker image tags
        id: vars
        run: |
          echo "sha_tag=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "branch_tag=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and Push API image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-service:latest ./api
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-service:${{ env.sha_tag }} ./api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-service:${{ env.sha_tag }}

      - name: Build and Push App image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/app-service:latest ./app
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/app-service:${{ env.sha_tag }} ./app
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app-service:${{ env.sha_tag }}

      - name: Build and Push DB image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/db-service:latest ./db
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/db-service:${{ env.sha_tag }} ./db
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/db-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/db-service:${{ env.sha_tag }}
